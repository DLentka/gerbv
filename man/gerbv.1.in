.TH gerbv 1 "Oct 13th, 2002" Version @VERSION@
.SH NAME
gerbv - Gerber Viewer
.SH SYNOPSIS
.B gerbv [OPTIONS]  [gerberfile[s]]
.SH DESCRIPTION
.PP
\fIgerbv\fP is a viewer for Gerber files. Gerber files is generated
from different PCB CAD programs and are sent to subcontractors to
actually make the PCB. \fIgerbv\fP also supports Excellon/NC drill files.

\fIgerbv\fP uses GTK+ 1.2.

.SH OPTIONS
.l
.B Warning! 
On some platforms, which hasn't long option available, only
short options are available.

.SS gerbv Options
.BI -V|--version
Prints the version number of gerbv and exits.
.TP
.BI -b\ <backend>|--batch=<backend>
Calls <backend> with the current parsed file. Only available if you compiled
in Guile support. 
.TP
.BI --geometry=<width>x<height>[<+->x-position[<+->y-position]]
Sets the the size of the window. X-position and y-position are currently
ignored by gerbv.

.SS GTK Options
.BI --gtk-module= MODULE
Load an additional GTK module
.TP
.BI --g-fatal-warnings
Make all warnings fatal
.TP
.BI --gtk-debug= FLAGS
GTK debugging flags to set
.TP
.BI --gtk-no-debug= FLAGS
GTK debugging flags to unset
.TP
.BI --gdk-debug= FLAGS
GDK debugging flags to set
.TP
.BI --gdk-no-debug= FLAGS
GDK debugging flags to unset
.TP
.BI --display= DISPLAY
X display to use
.TP
.BI --sync
Make X call synchronous
.TP
.BI --no-xshm
Don't use X shared memory extension
.TP
.BI --name= NAME
Program name as used by the window manager
.TP
.BI --class= CLASS
Program class as used by the window manager

.SH GENERAL
When you start gerbv you can give the files to be loaded on the command line,
either as each file separated with a space or by using wildcards.

The user interface is graphical. Simply press left mouse button and the image
will pan as you move the mouse. To manipulate a layer, right-click on
one of the rightmost buttons. That will bring up a pop-up menu where
you can select what you want to do with that layer (load file, change
color, etc).

If you hold the mouse button over one the rightmost button a tooltips will
show you the name of the file loaded on that layer.

Default of concurrently loaded files are 20 layers. You can change this 
during configure with:

 ./configure with\-maxfiles\=\<number\>

.SH ACTIVATION AND DEACTIVATION OF LAYERS
You can load several files at one time. You can then turn displaying
of the layers on and off by clicking on one of the rightmost buttons.

You can also control this from the keyboard. Press Alt, enter the number
on the layer you want activate/deactivate on the numerical keypad and then
release the Alt key.

.SH ZOOMING
Zooming can be handled by either menu choices, keypressing, middle mouse 
button or scroll wheel. If you press Alt+I you will zoom in and if you
press Alt+O you will zoom out.If you press middle mouse button you will zoom
out, and if you press Shift and middle mouse button you will zoom in. 
Scroll wheel works if you enabled that in your X server and mapped it
to button 4 and 5.

You can also do zooming by outline. Press right mouse button, draw,
release.  The dashed line shows how the zooming will be dependent on
the resolution of the window. The non-dashed outline will show what
you actually selected. If you change your mind when started to mark
outline, you can always abort by pressing escape. By holding down
the shift key when you press the right mouse button, you will select 
an area where the point you started at will be the center of your selection.

.SH MEASUREMENTS
You can do measurement on the image displayed. By pressing shift, the 
cursor changes to a plus. By using left mouse button you can draw the lines
that you want to measure. Currently the gerber files must be in inches. 
The result of the last measurement is also displayed on the statusbar.
All measurements are in the drawing until you either zoom, pan or press the
escape key.

The statusbar shows the current mouse position on the layer in the same 
coordinates as in the file. Ie if you have (0,0) in the middle of the image
in the gerber files, the statusbar will show (0,0) at the same place.

.SH SUPERIMPOSING
When you load several Gerber files, you can display them "on top of each other",
ie superimposing. The general way to display them are that upper layers
cover the layers beneath, which is called copy (GTK+ terms).

The other ways selectable are and, or, xor and invert. They map directly to
corresponding functions in GTK. In GTK they are described as:
"For colored images, only GDK_COPY, GDK_XOR and GDK_INVERT are generally 
useful. For bitmaps, GDK_AND and GDK_OR are also useful."

.SH BACKEND
If you compiled in Guile you can run gerbv as a parser with output generated
by a Scheme script. This system is currently under heavy redesign, so use 
this with caution.

If you call gerbv with --batch=<backend>, gerbv starts looking for a file
namned gerb-<backend>.scm. It starts looking for it in the directory gerbv
was invoked from, then it looks in $HOME/.gerbv/scheme and finally in
@BACKEND_DIR@.

Currently the only documentation on how to write a backend is the code in the
scheme directory of the distribution.

.SH "ENVIRONMENT"
No environment variables are currently in use.

.SH "AUTHOR"
.nf
Stefan Petersen (spe@stacken.kth.se): Overall hacker and project leader
Andreas Andersson (e92_aan@e.kth.se): Drill file support and general hacking
Anders Eriksson (anders@umunet.org) : X and GTK+ ideas and hacking

.SH COPYRIGHT
.nf
Copyright \(co  2001-2002 Stefan Petersen

This document can be freely redistributed according to the terms of the 
GNU General Public License version 2.0
